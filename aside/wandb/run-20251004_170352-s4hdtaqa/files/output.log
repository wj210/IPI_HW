wandb: Detected [huggingface_hub.inference, openai] in use.
wandb: Use W&B Weave for improved LLM call tracing. Install Weave with `pip install weave` then add `import weave` to the top of your script.
wandb: For more information, check out the docs at: https://weave-docs.wandb.ai/
  0%|          | 0/584 [00:00<?, ?it/s]
FULL PROMPT: [{'role': 'user', 'content': 'Given a set of people and a destination, suggest an efficient way for them to travel there.'}, {'role': 'input', 'content': '7 people, San Francisco'}, {'role': 'assistant', 'content': "To suggest an efficient way for 7 people to travel to San Francisco, we need to consider several factors:\n\n### 1. **Starting Location**\n- Are you already in San Francisco, or are you traveling from another city or country?\n- If you're traveling from a nearby area (e.g., Los Angeles, Sacramento), driving or taking a regional train might be efficient.\n- If you're traveling from farther away (e.g., New York, Chicago), air travel is likely the most efficient.\n\n### 2. **Budget**\n- Do you want to minimize cost or prioritize speed?\n\n### 3. **Travel Preferences**\n- Are you looking for a group experience (e.g., carpool, bus, train) or individual travel?\n- Are there any special needs or constraints (e.g., luggage, accessibility)?\n\n### 4. **Time Constraints**\n- How soon do you need to arrive in San Francisco?\n\n---\n\n## **Assuming you're traveling from outside the U.S. (e.g., New York, London, etc.)**\n\n### ‚úàÔ∏è **Option 1: Commercial Air Travel (Most Efficient for Long Distances)**\n- **Best for:** Group from far away, traveling on a tight schedule.\n- **How to do it:**\n  - Book a group flight for all 7 people.\n  - Consider a charter flight if you want more flexibility or private travel.\n  - Use a travel agency or a group booking platform to handle logistics.\n- **Pros:**\n  - Fast (e.g., 5‚Äì7 hours from New York).\n  - Efficient for large groups.\n- **Cons:**\n  - More expensive than other options.\n  - May require more planning.\n\n---\n\n## **Assuming you're traveling from nearby U.S. cities (e.g., Los Angeles, Sacramento, San Jose)**\n\n### üöó **Option 2: Drive (Best for Local Travel)**\n- **Best for:** Group from nearby cities, with access to a vehicle.\n- **How to do it:**\n  - Rent a large van or SUV for the group.\n  - Plan the route and make stops for rest or sightseeing.\n  - Use GPS or a map app for navigation.\n- **Pros:**\n  - Flexible and allows for stops along the way.\n  - No need for airport security or check-in.\n- **Cons:**\n  - Longer travel time than flying.\n  - More fuel and toll costs.\n\n---\n\n## **Assuming you‚Äôre traveling from Europe or Asia (e.g., London, Tokyo)**\n\n### ‚úàÔ∏è **Option 3: International Air Travel + Domestic Flights**\n- **Best for:** International travelers needing to get to San Francisco efficiently.\n- **How to do it:**\n  - Fly to a nearby international airport (e.g., San Francisco International Airport ‚Äì SFO, or nearby Oakland or San Jose).\n  - From there, take a direct flight or a connecting flight to SFO.\n  - Arrange ground transportation (rental car, airport shuttle, or ride-share) to your destination in San Francisco.\n- **Pros:**\n  - Fastest way for international travel.\n  - Easy to plan with group bookings.\n- **Cons:**\n  - More expensive and time-consuming for group travel compared to other options.\n\n---\n\n## **Option 4: Public Transportation (Best for Budget Travelers or Short Trips)**\n\n### üöá **Option 4a: Train or Bus (Local Transportation)**\n- If you're already in California or near the Bay Area:\n  - Take a regional train (e.g., Amtrak) or a bus to San Francisco.\n  - Use services like **Caltrain**, **BART**, or **Greyhound**.\n- **Pros:**\n  - Cost-effective.\n  - No need for a car.\n- **Cons:**\n  - Slower than driving or flying.\n  - Limited group seating options.\n\n---\n\n## **Option 4b: Group Bus or Coach (For Local Travel)**\n- If you're coming from a nearby city (e.g., Sacramento, San Jose):\n  - Charter a bus or coach for the group.\n  - This is ideal for group travel and offers a comfortable, shared experience.\n- **Pros:**\n  - Cost-effective for a group.\n  - No need to rent a car.\n- **Cons:**\n  - Less flexible than driving.\n\n---\n\n## **Recommendations Based on Scenarios**\n\n### üåç **If you're traveling from abroad (e.g., Europe, Asia):**\n- ‚úàÔ∏è **Fly directly to San Francisco** (e.g., SFO, SJC, OAK).\n- Ar
Rotated segment 0:
<|im_start|>user
<reference_data>
7 people, San Francisco
</reference_data><|im_end|>
<|im_start|>assistant
<think>

</think>

To suggest an efficient way for 7 people to travel to San Francisco, we need to consider several factors:

### 1. **Starting Location**
- Are you already in San Francisco, or are you traveling from another city or country?
- If you're traveling from a nearby area (e.g., Los Angeles, Sacramento), driving or taking a regional train might be efficient.
- If you're traveling from farther away (e.g., New York, Chicago), air travel is likely the most efficient.

### 2. **Budget**
- Do you want to minimize cost or prioritize speed?

### 3. **Travel Preferences**
- Are you looking for a group experience (e.g., carpool, bus, train) or individual travel?
- Are there any special needs or constraints (e.g., luggage, accessibility)?

### 4. **Time Constraints**
- How soon do you need to arrive in San Francisco?

---

## **Assuming you're traveling from outside the U.S. (e.g., New York, London, etc.)**

### ‚úàÔ∏è **Option 1: Commercial Air Travel (Most Efficient for Long Distances)**
- **Best for:** Group from far away, traveling on a tight schedule.
- **How to do it:**
  - Book a group flight for all 7 people.
  - Consider a charter flight if you want more flexibility or private travel.
  - Use a travel agency or a group booking platform to handle logistics.
- **Pros:**
  - Fast (e.g., 5‚Äì7 hours from New York).
  - Efficient for large groups.
- **Cons:**
  - More expensive than other options.
  - May require more planning.

---

## **Assuming you're traveling from nearby U.S. cities (e.g., Los Angeles, Sacramento, San Jose)**

### üöó **Option 2: Drive (Best for Local Travel)**
- **Best for:** Group from nearby cities, with access to a vehicle.
- **How to do it:**
  - Rent a large van or SUV for the group.
  - Plan the route and make stops for rest or sightseeing.
  - Use GPS or a map app for navigation.
- **Pros:**
  - Flexible and allows for stops along the way.
  - No need for airport security or check-in.
- **Cons:**
  - Longer travel time than flying.
  - More fuel and toll costs.

---

## **Assuming you‚Äôre traveling from Europe or Asia (e.g., London, Tokyo)**

### ‚úàÔ∏è **Option 3: International Air Travel + Domestic Flights**
- **Best for:** International travelers needing to get to San Francisco efficiently.
- **How to do it:**
  - Fly to a nearby international airport (e.g., San Francisco International Airport ‚Äì SFO, or nearby Oakland or San Jose).
  - From there, take a direct flight or a connecting flight to SFO.
  - Arrange ground transportation (rental car, airport shuttle, or ride-share) to your destination in San Francisco.
- **Pros:**
  - Fastest way for international travel.
  - Easy to plan with group bookings.
- **Cons:**
  - More expensive and time-consuming for group travel compared to other options.

---

## **Option 4: Public Transportation (Best for Budget Travelers or Short Trips)**

### üöá **Option 4a: Train or Bus (Local Transportation)**
- If you're already in California or near the Bay Area:
  - Take a regional train (e.g., Amtrak) or a bus to San Francisco.
  - Use services like **Caltrain**, **BART**, or **Greyhound**.
- **Pros:**
  - Cost-effective.
  - No need for a car.
- **Cons:**
  - Slower than driving or flying.
  - Limited group seating options.

---

## **Option 4b: Group Bus or Coach (For Local Travel)**
- If you're coming from a nearby city (e.g., Sacramento, San Jose):
  - Charter a bus or coach for the group.
  - This is ideal for group travel and offers a comfortable, shared experience.
- **Pros:**
  - Cost-effective for a group.
  - No need to rent a car.
- **Cons:**
  - Less flexible than driving.

---

## **Recommendations Based on Scenarios**

### üåç **If you're traveling from abroad (e.g., Europe, Asia):**
- ‚úàÔ∏è **Fly directly to San Francisco** (e.g., SFO, SJC, OAK).
- Arrange **group flights** or **charter flights** for 7 people.
- Use a **ride-share** service or **rent a car** upon arrival.

### üöó **If you're traveling from nearby U.S. cities:**
- üöó **Drive in a rental van** or **charter a bus** for the group.
- Plan the route and make stops for rest.

### üìà **If you want to save money:**
- Consider **shared rides** or **group travel deals**.
- Look into **group discount travel agencies**.

---

## **Final Suggestion (Best Efficiency for Typical Scenario):**
If you're traveling from **outside the U.S.**, the most efficient and convenient way for 7 people would be to **book a group charter flight** or **book a commercial group flight** to San Francisco International Airport (SFO), and then use a **ride-share** or **rent a car** to get to your destination in the city.

Would you like help booking this or finding specific travel options?<|im_end|>
  segment_ids = [torch.tensor(feature.pop("segment_ids")) for feature in features]
`loss_type=None` was set in the config but it is unrecognized. Using the default loss: `ForCausalLMLoss`.
 20%|‚ñà‚ñâ        | 116/584 [55:09<3:42:11, 28.49s/it]

{'loss': 15.8496, 'grad_norm': 259.63934326171875, 'learning_rate': 7.5e-07, 'epoch': 0.03}
{'loss': 13.5764, 'grad_norm': 147.03257751464844, 'learning_rate': 1.5833333333333331e-06, 'epoch': 0.07}
[2025-10-04 17:16:14,602] [WARNING] [stage3.py:2171:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
{'loss': 8.8622, 'grad_norm': 24.7342472076416, 'learning_rate': 1.999606626383053e-06, 'epoch': 0.1}
{'loss': 7.514, 'grad_norm': 11.65573787689209, 'learning_rate': 1.996461494117619e-06, 'epoch': 0.14}
{'loss': 7.0247, 'grad_norm': 14.042054176330566, 'learning_rate': 1.9901811253364454e-06, 'epoch': 0.17}
{'loss': 6.6922, 'grad_norm': 6.7054362297058105, 'learning_rate': 1.98078528040323e-06, 'epoch': 0.21}
{'loss': 6.523, 'grad_norm': 6.046377182006836, 'learning_rate': 1.9683035221222613e-06, 'epoch': 0.24}
{'loss': 6.3673, 'grad_norm': 6.426614761352539, 'learning_rate': 1.952775122722896e-06, 'epoch': 0.27}
{'loss': 6.1917, 'grad_norm': 6.97737455368042, 'learning_rate': 1.9342489402945995e-06, 'epoch': 0.31}
{'loss': 6.2168, 'grad_norm': 6.091848373413086, 'learning_rate': 1.9127832650613187e-06, 'epoch': 0.34}
{'loss': 6.2088, 'grad_norm': 5.28071928024292, 'learning_rate': 1.8884456359788724e-06, 'epoch': 0.38}
***** Running Evaluation *****
  Num examples = 500
  Batch size = 8
FULL PROMPT: [{'role': 'user', 'content': 'Teach the following concept to a toddler'}, {'role': 'input', 'content': 'The alphabet'}, {'role': 'assistant', 'content': 'Sure! Here\'s a fun and simple way to teach the **alphabet** to a **toddler**:\n\n---\n\n### üåü **Teaching the Alphabet to a Toddler: A Fun Way!**\n\n**Step 1: Start with the Letters That Look Like Things They Know**\n\nToddlers love things that look like animals, shapes, or things they see every day.\n\n- **A** ‚Äì Like an apple! "A for apple!"\n- **B** ‚Äì Like a bear or a balloon! "B for bear!"\n- **C** ‚Äì Like a cat or a cookie! "C for cat!"\n- **D** ‚Äì Like a dog or a dinosaur! "D for dog!"\n- **E** ‚Äì Like an egg or a elephant! "E for egg!"\n- **F** ‚Äì Like a fish or a flower! "F for fish!"\n- **G** ‚Äì Like a giraffe or a grape! "G for giraffe!"\n- **H** ‚Äì Like a house or a hat! "H for house!"\n- **I** ‚Äì Like an ice cream cone! "I for ice cream!"\n- **J** ‚Äì Like a jellyfish! "J for jellyfish!"\n- **K** ‚Äì Like a kangaroo! "K for kangaroo!"\n- **L** ‚Äì Like a lollipop or a lion! "L for lollipop!"\n- **M** ‚Äì Like a mountain or a monkey! "M for mountain!"\n- **N** ‚Äì Like a nose or a notebook! "N for nose!"\n- **O** ‚Äì Like a orange or a circle! "O for orange!"\n- **P** ‚Äì Like a pizza or a penguin! "P for pizza!"\n- **Q** ‚Äì Like a queen or a queue! "Q for queen!"\n- **R** ‚Äì Like a rainbow or a rabbit! "R for rainbow!"\n- **S** ‚Äì Like a snake or a sun! "S for snake!"\n- **T** ‚Äì Like a tree or a triangle! "T for tree!"\n- **U** ‚Äì Like a cup or a unicorn! "U for unicorn!"\n- **V** ‚Äì Like a van or a V! "V for van!"\n- **W** ‚Äì Like a whale or a W! "W for whale!"\n- **X** ‚Äì Like an X! "X for X-ray!"\n- **Y** ‚Äì Like a Y! "Y for Yummy!"\n- **Z** ‚Äì Like a zebra or a zigzag! "Z for zebra!"\n\n---\n\n### üé∂ **Make It Fun with Songs and Rhymes**\n\nSing the alphabet song or make up your own fun song to help them remember.\n\n**Example:**\n\n> A for apple, B for bear,  \n> C for cat, D for deer!  \n> E for egg, F for fish,  \n> G for grape, H for horse!\n\n(Repeat and hand them a letter card or a letter-shaped toy as you go.)\n\n---\n\n### üß∏ **Use Toys and Visuals**\n\n- Use **letter blocks**, **letter magnets**, or **flashcards**.\n- Point out letters in the environment ‚Äì like the **A** in "apple" on a sign, or the **B** in "butterfly" on a toy.\n- Let them **touch, see, and say** the letters.\n\n---\n\n### üß© **Let Them Play and Explore**\n\n- Play **alphabet scavenger hunt**: Look for items that start with each letter.\n- Use **playdough** to make letters.\n- Use **alphabet puzzles** or **blocks** to build words.\n\n---\n\n### üéâ **Keep It Short and Sweet**\n\nToddlers have short attention spans, so keep sessions **short and fun**. Maybe 5-10 minutes at a time.\n\n---\n\n### üìö **Books to Read Together**\n\nTry these fun alphabet books for toddlers:\n\n- *Brown Bear, Brown Bear, What Do You See?* by Bill Martin Jr. and Eric Carle\n- *The Very Hungry Caterpillar* by Eric Carle\n- *Alphabet Zoo* by Jill Murphy\n- *ABC Mouse* (interactive app for kids)\n\n---\n\n### ‚ú® **Encourage Curiosity and Play**\n\nLet them **ask questions** and make **mistakes**. Learning is fun when it\'s **playful and positive**!\n\n---\n\nWould you like a printable alphabet chart or a simple song for toddlers? üéµ'}]
Rotated segment 0:
<|im_start|>user
<reference_data>
The alphabet
</reference_data><|im_end|>
<|im_start|>assistant
<think>

</think>

Sure! Here's a fun and simple way to teach the **alphabet** to a **toddler**:

---

### üåü **Teaching the Alphabet to a Toddler: A Fun Way!**

**Step 1: Start with the Letters That Look Like Things They Know**

Toddlers love things that look like animals, shapes, or things they see every day.

- **A** ‚Äì Like an apple! "A for apple!"
- **B** ‚Äì Like a bear or a balloon! "B for bear!"
- **C** ‚Äì Like a cat or a cookie! "C for cat!"
- **D** ‚Äì Like a dog or a dinosaur! "D for dog!"
- **E** ‚Äì Like an egg or a elephant! "E for egg!"
- **F** ‚Äì Like a fish or a flower! "F for fish!"
- **G** ‚Äì Like a giraffe or a grape! "G for giraffe!"
- **H** ‚Äì Like a house or a hat! "H for house!"
- **I** ‚Äì Like an ice cream cone! "I for ice cream!"
- **J** ‚Äì Like a jellyfish! "J for jellyfish!"
- **K** ‚Äì Like a kangaroo! "K for kangaroo!"
- **L** ‚Äì Like a lollipop or a lion! "L for lollipop!"
- **M** ‚Äì Like a mountain or a monkey! "M for mountain!"
- **N** ‚Äì Like a nose or a notebook! "N for nose!"
- **O** ‚Äì Like a orange or a circle! "O for orange!"
- **P** ‚Äì Like a pizza or a penguin! "P for pizza!"
- **Q** ‚Äì Like a queen or a queue! "Q for queen!"
- **R** ‚Äì Like a rainbow or a rabbit! "R for rainbow!"
- **S** ‚Äì Like a snake or a sun! "S for snake!"
- **T** ‚Äì Like a tree or a triangle! "T for tree!"
- **U** ‚Äì Like a cup or a unicorn! "U for unicorn!"
- **V** ‚Äì Like a van or a V! "V for van!"
- **W** ‚Äì Like a whale or a W! "W for whale!"
- **X** ‚Äì Like an X! "X for X-ray!"
- **Y** ‚Äì Like a Y! "Y for Yummy!"
- **Z** ‚Äì Like a zebra or a zigzag! "Z for zebra!"

---

### üé∂ **Make It Fun with Songs and Rhymes**

Sing the alphabet song or make up your own fun song to help them remember.

**Example:**

> A for apple, B for bear,
> C for cat, D for deer!
> E for egg, F for fish,
> G for grape, H for horse!

(Repeat and hand them a letter card or a letter-shaped toy as you go.)

---

### üß∏ **Use Toys and Visuals**

- Use **letter blocks**, **letter magnets**, or **flashcards**.
- Point out letters in the environment ‚Äì like the **A** in "apple" on a sign, or the **B** in "butterfly" on a toy.
- Let them **touch, see, and say** the letters.

---

### üß© **Let Them Play and Explore**

- Play **alphabet scavenger hunt**: Look for items that start with each letter.
- Use **playdough** to make letters.
- Use **alphabet puzzles** or **blocks** to build words.

---

### üéâ **Keep It Short and Sweet**

Toddlers have short attention spans, so keep sessions **short and fun**. Maybe 5-10 minutes at a time.

---

### üìö **Books to Read Together**

Try these fun alphabet books for toddlers:

- *Brown Bear, Brown Bear, What Do You See?* by Bill Martin Jr. and Eric Carle
- *The Very Hungry Caterpillar* by Eric Carle
- *Alphabet Zoo* by Jill Murphy
- *ABC Mouse* (interactive app for kids)

---

### ‚ú® **Encourage Curiosity and Play**

Let them **ask questions** and make **mistakes**. Learning is fun when it's **playful and positive**!

---

Would you like a printable alphabet chart or a simple song for toddlers? üéµ<|im_end|>
 20%|‚ñà‚ñâ        | 116/584 [55:44<3:42:11, 28.49s stage3_gather_16bit_weights_on_model_save=false. Saving the full checkpoint instead, use zero_to_fp32.py to recover weights
Saving model checkpoint to /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-116

{'eval_loss': 5.950676441192627, 'eval_runtime': 34.9039, 'eval_samples_per_second': 14.325, 'eval_steps_per_second': 0.458, 'epoch': 0.4}
Configuration saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-116/config.json
Configuration saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-116/generation_config.json
Model weights saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-116/model.safetensors
chat template saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-116/chat_template.jinja
tokenizer config file saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-116/tokenizer_config.json
Special tokens file saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-116/special_tokens_map.json
/export/home2/weijie210/miniconda3/envs/ipi_hw/lib/python3.12/site-packages/torch/distributed/distributed_c10d.py:4807: UserWarning: No device id is provided via `init_process_group` or `barrier `. Using the current device set by the user.
  warnings.warn(  # warn only once
Deleting older checkpoint [/dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-174] due to args.save_total_limit
/export/home2/weijie210/ipi_huawei/aside/fine-tune.py:127: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.detach().clone() or sourceTensor.detach().clone().requires_grad_(True), rather than torch.tensor(sourceTensor).
  segment_ids = [torch.tensor(feature.pop("segment_ids")) for feature in features]
[2025-10-04 18:04:01,161] [WARNING] [stage3.py:2171:step] 1 pytorch allocator cache flushes since last step. this happens when there is high memory pressure and is detrimental to performance. if this is happening frequently consider adjusting settings to reduce memory consumption. If you are unable to make the cache flushes go away consider adding get_accelerator().empty_cache() calls in your training loop to ensure that all ranks flush their caches at the same time
 40%|‚ñà‚ñà‚ñà‚ñâ      | 232/584 [1:54:56<2:53:29, 29.57s/it]  
{'loss': 6.0162, 'grad_norm': 5.857165813446045, 'learning_rate': 1.861312628232409e-06, 'epoch': 0.41}
{'loss': 6.0444, 'grad_norm': 9.965479850769043, 'learning_rate': 1.8314696123025452e-06, 'epoch': 0.45}
{'loss': 5.9567, 'grad_norm': 6.495055675506592, 'learning_rate': 1.799010485358249e-06, 'epoch': 0.48}
{'loss': 5.9409, 'grad_norm': 5.09623908996582, 'learning_rate': 1.7640373758216075e-06, 'epoch': 0.51}
{'loss': 5.8824, 'grad_norm': 6.690849304199219, 'learning_rate': 1.726660322034027e-06, 'epoch': 0.55}
{'loss': 5.6884, 'grad_norm': 6.097729682922363, 'learning_rate': 1.6869969260349015e-06, 'epoch': 0.58}
{'loss': 5.6996, 'grad_norm': 5.6952643394470215, 'learning_rate': 1.6451719835420876e-06, 'epoch': 0.62}
{'loss': 5.6333, 'grad_norm': 5.409456729888916, 'learning_rate': 1.6013170912984058e-06, 'epoch': 0.65}
{'loss': 5.609, 'grad_norm': 7.30462121963501, 'learning_rate': 1.5555702330196021e-06, 'epoch': 0.69}
{'loss': 5.5325, 'grad_norm': 5.773576736450195, 'learning_rate': 1.5080753452465294e-06, 'epoch': 0.72}
{'loss': 5.4792, 'grad_norm': 6.544723987579346, 'learning_rate': 1.4589818644675376e-06, 'epoch': 0.75}
{'loss': 5.4674, 'grad_norm': 6.3008646965026855, 'learning_rate': 1.4084442569359961e-06, 'epoch': 0.79}
***** Running Evaluation *****
  Num examples = 500
  Batch size = 8
 40%|‚ñà‚ñà‚ñà‚ñâ      | 232/584 [1:55:30<2:53:29, 29.5 stage3_gather_16bit_weights_on_model_save=false. Saving the full checkpoint instead, use zero_to_fp32.py to recover weights
Saving model checkpoint to /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-232
{'eval_loss': 5.354457378387451, 'eval_runtime': 33.6907, 'eval_samples_per_second': 14.841, 'eval_steps_per_second': 0.475, 'epoch': 0.8}
Configuration saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-232/config.json
Configuration saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-232/generation_config.json
Model weights saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-232/model.safetensors
chat template saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-232/chat_template.jinja
tokenizer config file saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-232/tokenizer_config.json
Special tokens file saved in /dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-232/special_tokens_map.json
/export/home2/weijie210/miniconda3/envs/ipi_hw/lib/python3.12/site-packages/torch/distributed/distributed_c10d.py:4807: UserWarning: No device id is provided via `init_process_group` or `barrier `. Using the current device set by the user.
  warnings.warn(  # warn only once
Deleting older checkpoint [/dataset/common/huggingface/model/IPI/qwen3_8b_ASIDE_MetaSecAlign_SFT/checkpoint-116] due to args.save_total_limit
/export/home2/weijie210/ipi_huawei/aside/fine-tune.py:127: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.detach().clone() or sourceTensor.detach().clone().requires_grad_(True), rather than torch.tensor(sourceTensor).
  segment_ids = [torch.tensor(feature.pop("segment_ids")) for feature in features]
 48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | 281/584 [2:22:22<2:23:10, 28.35s/it]  
{'loss': 5.4908, 'grad_norm': 8.440441131591797, 'learning_rate': 1.3566215326623129e-06, 'epoch': 0.82}
{'loss': 5.4167, 'grad_norm': 8.18834114074707, 'learning_rate': 1.3036767451096147e-06, 'epoch': 0.86}
{'loss': 5.4611, 'grad_norm': 5.031748294830322, 'learning_rate': 1.2497764781672269e-06, 'epoch': 0.89}
{'loss': 5.4755, 'grad_norm': 5.781373977661133, 'learning_rate': 1.1950903220161284e-06, 'epoch': 0.93}
{'loss': 5.3813, 'grad_norm': 5.6816725730896, 'learning_rate': 1.1397903395354996e-06, 'epoch': 0.96}
